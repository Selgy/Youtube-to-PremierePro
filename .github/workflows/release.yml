name: Build and Package

on:
  push:
    branches:
      - Pre-released

jobs:
  mac-build:
  
    runs-on: macOS-latest

    
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: 3.8.8  # Replace with your Python version

      - name: upgrade pip
        run: |
            pip install --upgrade pip


      - name: Install dependencies
        run: pip install -r requirements.txt 

      - name: Cache pip
        uses: actions/cache@v2
        with:
            path: ~/.cache/pip
            key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
            restore-keys: |
              ${{ runner.os }}-pip-
  
      - name: Download FFmpeg
        run: |
          curl -L https://evermeet.cx/ffmpeg/ffmpeg-4.4.zip -o ffmpeg.zip
          mkdir -p ffmpeg_dir           # Create a new directory for FFmpeg
          unzip ffmpeg.zip -d ffmpeg_dir  # Extract the zip file into ffmpeg_dir
          mkdir -p ffmpeg/bin           # Create the desired directory structure
          mv ffmpeg_dir/ffmpeg ffmpeg/bin/  # Move and rename the ffmpeg file
          chmod +x ffmpeg/bin/ffmpeg 

      - name: Build Application with PyInstaller
        run: |
          pyinstaller --clean --hidden-import=engineio.async_drivers.eventlet --hidden-import=engineio.async_drivers.gevent_uwsgi --hidden-import=engineio.async_drivers.gevent --hidden-import=engineio.async_drivers --hidden-import=gevent --hidden-import=engineio.async_drivers.threading --hidden-import=pygame.freetype --hidden-import=encodings.utf_16_le --add-binary "ffmpeg/bin/ffmpeg:." --add-data "icon.png:." --add-data "notification_sound.mp3:." --icon=icon.icns --windowed YoutubetoPremiere.py

      
        
    
      - name: Find YoutubetoPremiere.app
        run: find . -name "YoutubetoPremiere.app" -print

      - name: Compress the .app bundle
        run: |
          cd dist
          zip -r YoutubetoPremiere.zip YoutubetoPremiere.app

            

  
      - name: Get the release
        id: get_release
        uses: actions/github-script@v5
        with:
          script: |
            const { owner, repo } = context.repo
            const releases = await github.rest.repos.listReleases({ owner, repo })
            const preRelease = releases.data.find(release => release.prerelease && release.tag_name === 'V1.1')
            return preRelease.upload_url

      - name: Upload executables to asset
        id: upload-release-asset
        uses: softprops/action-gh-release@v1
        env:
              GITHUB_TOKEN: ${{ secrets.GH_SECRET }}
        with:
              draft: ${{ github.ref == 'refs/heads/master' }}
              prerelease: ${{ github.ref != 'refs/heads/master' }}
              tag_name: V1.1
              files: |
                dist/YoutubetoPremiere.zip

  win-build:
    runs-on: windows-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Set up Python
      uses: actions/setup-python@v2
      with:
        python-version: 3.8.8  # Replace with your Python version
    
    - name: Cache pip
      uses: actions/cache@v2
      with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-

    - name: Upgrade pip
      run: python -m pip install --upgrade pip

    - name: Install dependencies
      run: pip install -r requirements.txt

    - name: Download FFmpeg
      run: |
        curl -L https://www.gyan.dev/ffmpeg/builds/packages/ffmpeg-6.0-full_build.7z -o ffmpeg.7z
        7z x ffmpeg.7z -offmpeg
        mkdir ffmpeg/bin
    
    - name: Extract FFmpeg
      run: |
          7z x ffmpeg.7z
      
    - name: Rename Extracted FFmpeg Folder
      run: |
            if (Test-Path -Path "ffmpeg") {
                # Remove or rename the existing 'ffmpeg' directory/file
                Remove-Item -Recurse -Force "ffmpeg"
            }
            Move-Item -Path "ffmpeg-6.0-full_build" -Destination "ffmpeg"
      shell: pwsh

    - name: Cache pip
      uses: actions/cache@v2
      with:
        path: ~\AppData\Local\pip\Cache
        key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
        restore-keys: |
          ${{ runner.os }}-pip-


    - name: Find ffmpeg.exe
      shell: pwsh
      run: |
        Get-ChildItem -Recurse -Filter ffmpeg.exe | Format-Table FullName

    - name: Find icon.png
      shell: pwsh
      run: |
        Get-ChildItem -Recurse -Filter icon.png | Format-Table FullName
      
    - name: Install PyInstaller
      run: pip install pyinstaller
      
    - name: List installed packages
      run: pip list
 

    - name: check version pyinstaller
      run: pyinstaller -v

    - name: Find YoutubetoPremiere.py
      shell: pwsh
      run: |
          Get-ChildItem -Recurse -Filter YoutubetoPremiere.py | Format-Table FullName

    - name: Find notification_sound.mp3
      shell: pwsh
      run: |
        Get-ChildItem -Recurse -Filter notification_sound.mp3 | Format-Table FullName

    - name: List files in the repository root
      run: Get-ChildItem -Path .
      shell: pwsh
      

    - name: Build Application with PyInstaller
      run: |
            pyinstaller --onefile --clean --debug all `
            --hidden-import=engineio.async_drivers.eventlet `
            --hidden-import=engineio.async_drivers.gevent_uwsgi `
            --hidden-import=engineio.async_drivers.gevent `
            --hidden-import=engineio.async_drivers `
            --hidden-import=gevent `
            --hidden-import=engineio.async_drivers.threading `
            --hidden-import=pygame.freetype `
            --hidden-import=encodings.utf_16_le `
            --add-binary "D:\a\Youtube-to-PremierePro\Youtube-to-PremierePro\ffmpeg\bin\ffmpeg.exe;." `
            --add-data "./icon.png;." `
            --add-data "./notification_sound.mp3;." `
            --icon "./icon.ico" `
            YoutubetoPremiere.py    
        
    - name: Find ffmpeg.exe
      shell: pwsh
      run: |
        Get-ChildItem -Recurse -Filter ffmpeg.exe | Format-Table FullName

    - name: List directory contents
      run: dir

    - name: Get the release
      id: get_release
      uses: actions/github-script@v5
      with:
        script: |
          const { owner, repo } = context.repo
          const releases = await github.rest.repos.listReleases({ owner, repo })
          const preRelease = releases.data.find(release => release.prerelease && release.tag_name === 'V1.1')
          return preRelease.upload_url

    - name: Upload executables to asset
      id: upload-release-asset
      uses: softprops/action-gh-release@v1
      env:
            GITHUB_TOKEN: ${{ secrets.GH_SECRET }}
      with:
            draft: ${{ github.ref == 'refs/heads/master' }}
            prerelease: ${{ github.ref != 'refs/heads/master' }}
            tag_name: V1.1
            files: |
                ./dist/YoutubetoPremiere.exe