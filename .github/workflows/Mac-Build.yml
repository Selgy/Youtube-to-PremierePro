name: Build and Package for macOS

on:
  push:
    branches:
      - Pre-released  # Trigger this workflow on push to the main branch

jobs:
  build:
    runs-on: macOS-latest  # Use the latest macOS runner

    steps:
      - name: Checkout code
        uses: actions/checkout@v2  # Checkout your repository code

      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: 3.8.8  # Replace with your Python version

      - name: Install dependencies
        run: |
          pip install pyinstaller dmgbuild

      - name: Install Pillow
        run: pip install Pillow

      - name: Download FFmpeg
        run: |
          curl -L https://evermeet.cx/ffmpeg/ffmpeg-4.4.zip -o ffmpeg.zip
          unzip ffmpeg.zip
          mv ffmpeg ffmpeg-darwin-x86_64
          chmod +x ffmpeg-darwin-x86_64

      - name: Build Application with PyInstaller
        run: |
            pyinstaller --onefile --clean --windowed --hidden-import=engineio.async_drivers.eventlet --hidden-import=engineio.async_drivers.gevent_uwsgi --hidden-import=engineio.async_drivers.gevent --hidden-import=engineio.async_drivers --hidden-import=gevent --hidden-import=engineio.async_drivers.threading --hidden-import=pygame.freetype --hidden-import=encodings.utf_16_le --add-binary "ffmpeg-darwin-x86_64:." --add-data "icon.png:." --add-data "notification_sound.mp3:." --icon=icon.icns YoutubetoPremiere.py

      - name: Create settings.py
        run: |
          echo '''
          # settings.py

          # Basic settings
          title = "YoutubetoPremiere"  # The title of the DMG window and the name of the resulting disk image
          volume_icon = "icon.icns"  # The icon for the disk image
          format = "UDBZ"  # The format of the disk image (UDRW, UDRO, UDCO, UDTO, UFBI, UDZO, UDBZ, ULFO)
          size = None  # The size of the disk image (None for automatic sizing)
          files = ["YoutubetoPremiere.app"]  # The files to include in the disk image
          symlinks = {"Applications": "/Applications"}  # The symbolic links to include in the disk image

          # Appearance
          window_rect = ((400, 400), (500, 300))  # The size and position of the DMG window
          default_view = "icon-view"  # The default view style for the DMG window (icon-view or list-view)
          icon_size = 128  # The size of the icons in the DMG window
          text_size = 16  # The size of the text in the DMG window
          ''' > settings.py

      - name: Create DMG
        run: dmgbuild -s settings.py "YoutubetoPremiere" YoutubetoPremiere.dmg

      
      - name: Debug - Show current directory and contents
        run: |
          pwd
          ls -al
        
      - name: Get the release
        id: get_release
        uses: actions/github-script@v5
        with:
          script: |
            const { owner, repo } = context.repo
            const releases = await github.rest.repos.listReleases({ owner, repo })
            const preRelease = releases.data.find(release => release.prerelease && release.tag_name === 'V1.1')
            return preRelease.upload_url

      - name: Upload DMG to Release
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.get_release.outputs.result }}
          asset_path: ./dist/YoutubetoPremiere.dmg
          asset_name: YoutubetoPremiere.dmg
          asset_content_type: application/x-diskcopy